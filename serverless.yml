org: sandeepkhoj
app: cognito-trigger
service: cognito-trigger

frameworkVersion: '3'

package:
  # individually: true
  excludeDevDependencies: true
  patterns:
    # - '!./**'
    - '!node_modules/@aws-sdk/**/dist-es/**'
    - '!node_modules/@aws-sdk/**/dist-types/**'
    - '!node_modules/@smithy/**/dist-es/**'
    - '!node_modules/@smithy/**/dist-types/**'
    - src/**/*.pug

plugins:
  - serverless-plugin-typescript
  - serverless-offline
  # - serverless-plugin-common-excludes
  # - serverless-plugin-include-dependencies

custom:
  STAGE: ${self:provider.stage}
  CONFIG: ${file(./config/config.js):CONFIG}

provider:
  name: aws
  region: us-east-2
  iam:
    role: arn:aws:iam::829901743612:role/CognitoTiggerRole
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  memorySize: 1024 # optional, in MB, default is 1024
  timeout: 10 # optional, in seconds, default is 6
  versionFunctions: false # optional, default is true
  tracing:
    lambda: true
  environment:
    STAGE: ${self:provider.stage}
    DATABASE_URL: ${self:custom.CONFIG.DATABASE_URL}
    COGNITO_USER_POOL_ID: ${self:custom.CONFIG.COGNITO_USER_POOL_ID},
    IAHV_CLIENT_ID: ${self:custom.CONFIG.IAHV_CLIENT_ID}
    HB_CLIENT_ID: ${self:custom.CONFIG.HB_CLIENT_ID}
    AOL_CLIENT_ID: ${self:custom.CONFIG.AOL_CLIENT_ID}
    CDK_STACK_NAME: passwordless-example
    CDK_STACK_SES_FROM_ADDRESS: app.support@us.artofliving.org
    SES_FROM_ADDRESS: app.support@us.artofliving.org
    SES_REGION: us-east-1
    LOG_LEVEL: DEBUG
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    CORS_ALLOWED_ORIGINS: ${self:custom.CONFIG.CORS_ALLOWED_ORIGINS}
    # http://localhost:3000,https://aolf-web-qa-passwordless-49fa2f5e55b5.herokuapp.com
    ALLOWED_ORIGINS: ${self:custom.CONFIG.ALLOWED_ORIGINS}
    # http://localhost:3000,https://aolf-web-qa-passwordless-49fa2f5e55b5.herokuapp.com
    ALLOWED_RELYING_PARTY_IDS: ${self:custom.CONFIG.ALLOWED_RELYING_PARTY_IDS}
    # localhost,aolf-web-qa-passwordless-49fa2f5e55b5.herokuapp.com

functions:
  customMessage:
    handler: src/functions/customMessage.handler
    name: ${sls:stage}-customMessage
    events:
      - cognitoUserPool:
          pool: aol-${sls:stage}
          trigger: CustomMessage
          existing: true

  UserMigration:
    handler: src/functions/migrateUser.handler
    name: ${sls:stage}-migrateUser
    events:
      - cognitoUserPool:
          pool: aol-${sls:stage}
          trigger: UserMigration
          existing: true

  preAuthentication:
    handler: src/functions/preAuthentication.handler
    name: ${sls:stage}-preAuthentication
    events:
      - cognitoUserPool:
          pool: aol-${sls:stage}
          trigger: PreAuthentication
          existing: true

  postAuthentication:
    handler: src/functions/postAuthentication.handler
    name: ${sls:stage}-postAuthentication
    events:
      - cognitoUserPool:
          pool: aol-${sls:stage}
          trigger: PostAuthentication
          existing: true

  postConfirmation:
    handler: src/functions/postConfirmation.handler
    name: ${sls:stage}-postConfirmation
    events:
      - cognitoUserPool:
          pool: aol-${sls:stage}
          trigger: PostConfirmation
          existing: true

  preSignup:
    handler: src/functions/preSignup.handler
    name: ${sls:stage}-preSignup
    events:
      - cognitoUserPool:
          pool: aol-${sls:stage}
          trigger: PreSignUp
          existing: true

  defineAuthChallenge:
    handler: src/functions/defineAuthChallenge.handler
    name: ${sls:stage}-defineAuthChallenge
    events:
      - cognitoUserPool:
          pool: aol-${sls:stage}
          trigger: DefineAuthChallenge
          existing: true

  createAuthChallenge:
    handler: src/functions/createAuthChallenge.handler
    name: ${sls:stage}-createAuthChallenge
    events:
      - cognitoUserPool:
          pool: aol-${sls:stage}
          trigger: CreateAuthChallenge
          existing: true
    environment:
      FIDO2_ENABLED: TRUE
      DYNAMODB_AUTHENTICATORS_TABLE: cognito-passwordless-Fido2AuthenticatorsTablePasswordlessBDEAEEE6-X5X3PVGEKZR7
      DYNAMODB_SECRETS_TABLE: cognito-passwordless-SecretsTablePasswordless8B664A61-1K60WW37ERANU
      EXPOSE_USER_CREDENTIAL_IDS: TRUE
      KMS_KEY_ID: alias/Passwordless-cognito-passwordless
      MAGIC_LINK_ENABLED: TRUE
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
      ALLOWED_APPLICATION_ORIGINS:
      MIN_SECONDS_BETWEEN: 60
      ORIGINATION_NUMBER:
      OTP_LENGTH:
      SECONDS_UNTIL_EXPIRY: 900
      SENDER_ID:
      SIGN_IN_TIMEOUT: 120000
      SMS_OTP_STEP_UP_ENABLED: TRUE
      SNS_REGION: us-east-1
      STACK_ID: arn:aws:cloudformation:us-east-2:829901743612:stack/cognito-passwordless/ce2396f0-f1a9-11ee-a4fd-0aa83c143eb7
      USER_VERIFICATION: required

  verifyAuthChallenge:
    handler: src/functions/verifyAuthChallenge.handler
    name: ${sls:stage}-verifyAuthChallenge
    events:
      - cognitoUserPool:
          pool: aol-${sls:stage}
          trigger: VerifyAuthChallengeResponse
          existing: true
    environment:
      FIDO2_ENABLED: TRUE
      DYNAMODB_AUTHENTICATORS_TABLE: cognito-passwordless-Fido2AuthenticatorsTablePasswordlessBDEAEEE6-X5X3PVGEKZR7
      DYNAMODB_SECRETS_TABLE: cognito-passwordless-SecretsTablePasswordless8B664A61-1K60WW37ERANU
      EXPOSE_USER_CREDENTIAL_IDS: TRUE
      KMS_KEY_ID: alias/Passwordless-cognito-passwordless
      MAGIC_LINK_ENABLED: TRUE
      ALLOWED_APPLICATION_ORIGINS:
      SMS_OTP_STEP_UP_ENABLED: TRUE
      STACK_ID: arn:aws:cloudformation:us-east-2:829901743612:stack/cognito-passwordless/ce2396f0-f1a9-11ee-a4fd-0aa83c143eb7
      USER_VERIFICATION: required

  preToken:
    handler: src/functions/preToken.handler
    name: ${sls:stage}-preToken
    events:
      - cognitoUserPool:
          pool: aol-${sls:stage}
          trigger: PreTokenGeneration
          existing: true
    environment:
      CLIENT_METADATA_PERSISTED_KEYS: signInMethod,consent_id

  fido2Notification:
    handler: src/functions/fido2Notification.handler
    name: ${sls:stage}-fido2Notification

  fido2ChallengeApi:
    handler: src/functions/fido2ChallengeApi.handler
    name: ${sls:stage}-fido2ChallengeApi
    environment:
      CORS_ALLOWED_HEADERS: Content-Type
      CORS_ALLOWED_METHODS: POST
      CORS_MAX_AGE: 86400
      DYNAMODB_AUTHENTICATORS_TABLE: cognito-passwordless-Fido2AuthenticatorsTablePasswordlessBDEAEEE6-X5X3PVGEKZR7
      SIGN_IN_TIMEOUT: 120000
      USER_VERIFICATION: required

  fido2CredentialsApi:
    handler: src/functions/fido2CredentialsApi.handler
    name: ${sls:stage}-fido2CredentialsApi
    environment:
      ALLOWED_APPLICATION_ORIGINS:
      ATTESTATION: none
      AUTHENTICATOR_ATTACHMENT:
      AUTHENTICATOR_REGISTRATION_TIMEOUT: 300000
      COGNITO_USER_POOL_ID:
      CORS_ALLOWED_HEADERS: Content-Type,Authorization
      CORS_ALLOWED_METHODS: POST
      CORS_MAX_AGE: 86400
      DYNAMODB_AUTHENTICATORS_TABLE: cognito-passwordless-Fido2AuthenticatorsTablePasswordlessBDEAEEE6-X5X3PVGEKZR7
      FIDO2_NOTIFICATION_LAMBDA_ARN: arn:aws:lambda:${self:custom.CONFIG.REGION}:${self:custom.CONFIG.ACCOUNT_ID}:function:${sls:stage}-fido2Notification:$LATEST
      RELYING_PARTY_NAME: Passwordless Fido2 Example
      REQUIRE_RESIDENT_KEY:
      USER_VERIFICATION: required
